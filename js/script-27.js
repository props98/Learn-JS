"use strict";

/* 1) Какое будет выведено значение: let x = 5; alert( x++ );*/ 

let x = 5; 
console.log( x++ ) //! 5 - «постфиксная форма» возвращает и увеличевает 
console.log( ++x ) //! 6 - «Префиксная форма» увеличивает и возвращает


/* 2) Чему равно такое выражение: [ ] + false - null + true */

console.log(typeof([] + false)); //! строка 'false' т.к. пустой массив приводит к троке
console.log([] + false - null); // Nan
console.log([] + false - null + true); //! NaN

/* 3) Что выведет этот код: let y = 1; let x = y = 2; alert(x); */

let y = 1; 
let x = y = 2; 

console.log(x); //* 2

/* 4) Чему равна сумма [ ] + 1 + 2 */

console.log([] + 1); // Пустой массив переводит в строку получится строка '1'
console.log([] + 1 + 2); //! '1' + '2' конкатенация строк

/* 5) Что выведет этот код: alert( "1"[0] ) */

console.log( "1"[0]); //! 1 - обращение к индексу строки 0 

/* 6) Чему равно 2 && 1 && null && 0 && undefined */

//! И запинаеться на лжи
console.log(2 && 1 && null && 0 && undefined); //! null - Остановился на превом ложном вырожении Null

/* 7) Есть ли разница между выражениями? !!( a && b ) и (a && b) */

//! Два знака отрицания !! превращают значение в Boolean
console.log(!!( 1 && 2 ) == ( 1 && 2 ));

/* 8) Что выведет этот код: alert( null || 2 && 3 || 4 ); */

//! Или запинается на правде
console.log(null || 5 && 3 || 4); //! 3 - таблица приорететов операторов в  JS 


/* 9) a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b */


/* 10) Что выведет этот код: alert( +"Infinity" ); */


// 11) Верно ли сравнение: "Ёжик" > "яблоко"


/* 12) Чему равно 0 || "" || 2 || undefined || true || falsе */

