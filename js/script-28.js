'use strict';

//!  Повтор практических заданий

//? 1) Какое будет выведено значение: let x = 5; alert( x++ ); ?

let x = 5;
console.log( x++ ); // 5 - Сначала возвращает значение затем увеличивает его
console.log( ++x ); // 7 - Сначала увеличивает значение затем возвращает его

//? 2) Чему равно такое выражение: [ ] + false - null + true ?

console.log([] + false - null + true); // NaN - Массив + false  приводит 'false' в строку, срока 'false' -  null = NaN
console.log([] + false - null); // NaN

//? 3) Что выведет этот код: let y = 1; let x = y = 2; alert(x); ?

let a = 1; 
let b = a = 2; 
console.log(b) // 2

// 4) Чему равна сумма [ ] + 1 + 2?

console.log([ ] + 1 + 2); // 12 - Массив переводит 1 в строку строка '1' + 2 

// 5) Что выведет этот код: alert( "1"[0] )?

console.log("1"[0]); // 1 - Обращение к моссиву строки под индексом 0 > '1'

// 6) Чему равно 2 && 1 && null && 0 && undefined ?

console.log(2 && 1 && null && 0 && undefined); // null //! && - запинаеться на лжи

// 7) Есть ли разница между выражениями? !!( a && b ) и (a && b)?

console.log(!!( 1 && 2 ) === ( 1 && 2 )); // false знак повторного отрицания !! - переводит выражение в булево значение

// 8) Что выведет этот код: alert( null || 2 && 3 || 4 ); ?

console.log(null || 2 && 3 || 4 ); // 3
/* Работает приоритетность операторов, у оператора && приорите выше чем у ||
    2 && 3 - возвратит второе правдивое значение.
    Затем сравнение по порядку: null || 3 - //! || запинается на правде, 
    возвратит 3. Следующее сравнение 3 || 4 - ИЛИ возвратит первое положительное значение
*/

// 9) a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b ?

const d = [1, 2, 3]; 
const m = [1, 2, 3]
console.log(d == m);

/* а не будет равняться b, т.к. Массивы разные хотя и имеют одинаковые значения */

// 10)  Что выведет этот код: alert( +"Infinity" ); ?

console.log(typeof(+"Infinity" )); // Динамическая типизация: возыратит число Infinity

// 11) Верно ли сравнение: "Ёжик" > "яблоко"?

// Сравнение букв по таблице unicode

// 12) Чему равно 0 || "" || 2 || undefined || true || falsе ?

console.log(0 || null || 2 || undefined || true || falsе); //2  - //! ИЛИ запинается на правде